package api

import (
	"log"
	"net/http"

	httpSwagger "github.com/swaggo/http-swagger"
	_ "github.com/wrighbr/resume-api/docs" // docs is generated by Swag CLI, you have to import it.

	"github.com/gorilla/mux"
)

func HandleRequests() {

	router := mux.NewRouter()

	router.HandleFunc("/contactinfo", getContactInfo).Methods("GET")
	router.HandleFunc("/contactinfo", createContantInfo).Methods("POST")
	router.HandleFunc("/contactinfo", updateContantInfo).Methods("PUT")
	router.HandleFunc("/contactinfo", deleteContantInfo).Methods("DELETE")

	router.HandleFunc("/experience", getAllExperience).Methods("GET")
	router.HandleFunc("/experience", createExperience).Methods("POST")
	router.HandleFunc("/experience/{ID}", readExperience).Methods("GET")
	router.HandleFunc("/experience/{ID}", updateExperience).Methods("PUT")
	router.HandleFunc("/experience/{ID}", deleteExperience).Methods("DELETE")

	router.HandleFunc("/education", getAllEducation).Methods("GET")
	router.HandleFunc("/education", createEducation).Methods("POST")
	router.HandleFunc("/education/{ID}", readEducation).Methods("GET")
	router.HandleFunc("/education/{ID}", updateEducation).Methods("PUT")
	router.HandleFunc("/education/{ID}", deleteEducation).Methods("DELETE")

	router.HandleFunc("/techskill", getAllTechSkills).Methods("GET")
	router.HandleFunc("/techskill", createTechSkills).Methods("POST")
	router.HandleFunc("/techskill/{ID}", readTechSkills).Methods("GET")
	router.HandleFunc("/techskill/{ID}", updateTechSkills).Methods("PUT")
	router.HandleFunc("/techskill/{ID}", deleteTechSkills).Methods("DELETE")

	router.HandleFunc("/language", getAllLanguage).Methods("GET")
	router.HandleFunc("/language", createLanguage).Methods("POST")
	router.HandleFunc("/language/{ID}", readLanguage).Methods("GET")
	router.HandleFunc("/language/{ID}", updateLanguage).Methods("PUT")
	router.HandleFunc("/language/{ID}", deleteLanguage).Methods("DELETE")

	router.HandleFunc("/resume", getResume).Methods("GET")

	router.PathPrefix("/").Handler(httpSwagger.WrapHandler)
	log.Fatal(http.ListenAndServe(":8080", router))

}
